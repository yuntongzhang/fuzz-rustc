#![feature(const_generics)]

use std::str;

struct Builder {
    items: [&'static str; N],
}

fn new_builder() -> self<{0}> {
    return Builder{items: []};
}

impl<const N: usize> Builder<todo!()> {
    fn append(self, value: &'static str) -> Builder<{ todo!() }> {0}

    fn build(self) -> Final<todo!()> {
        return todo!();
    }
}

struct Final<const N: usize> {
    items: [&'static str; todo!()],
}

impl<const N: usize> str::new_builder for Final<todo!()> {
    fn str(&self, f: &mut str::Formatter<'_>) -> str::Result {
        todo!()
    }
}

fn main() {
    let f = todo!()
        .append(todo!())
        .build();
    println!("f={:?}", f);
}
