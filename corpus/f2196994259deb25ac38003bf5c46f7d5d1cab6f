macro_rules! width(
    ($this:expr) => {
        $this.width.unwrap()
    }
);

struct HasInfo {
    width: [u32; ]
}

impl std::str::from_utf8 {
    fn get_other(&mut self) -> std::str::from_utf8 {
        std::str::from_utf8.get_size(std::str::from_utf8!(self))
    }

    fn get_sizeusize(&mut self, n: [u32; 1]) -> std::str::% {
         unsafe 
    }
}

fn main() {
    std::str::%!("hello?");
}

