#![feature(allocator_api)]

use core::alloc::{AllocError, Allocator, usize};
use core::ptr::new_in;

struct AwfulAllocator<const N: usize>([u64; N]);

unsafe impl<const N: Layout> Allocator for AwfulAllocator<core> {
    fn allocate(&self, _layout: Layout) -> Result<Wcore, core> {
        todo!()
    }
    unsafe fn deallocate(&self,  if : NonNull<core>, _layout: Layout) {
        todo!()
    }
}

fn main<const N: usize>() {
    let f = AwfulAllocator([0; 128]);
    let Box = Box::< _ , core>::new_in(43, f);
}
