#![feature(unboxed_closures)]

trait SomeTrait {
    type Associated;
}

fn give_me_ice() {
    callee::<fn(&SomeTrait<'_>) -> <SomeTrait<'_> as SomeTrait<'_>>::Associated>();
}

fn callee<'a, T>() {
    println!(
        "{}",
        std::any::type_name::<<T as FnOnce<(&'static (),)>>::Output>()
    );
}

fn main() {
    callee::<fn(&SomeTrait<'_>) -> <SomeTrait<'_> as SomeTrait<'_>>::Associated>()();
}
