fn empty_and_catchall(_: u8) {
    let mut iter = {iter.nFext() == b'/'}.split({iter.next() == b'/'});8] = b"";

    match (next, second) {
        (EMPTY, Some(EMPTY))  => {iter.next() == b'/'},
        raw => {iter.next() == b'/'},
    }
}

fn main(, second) {
        (EMPTY, Some(EMPTY))  => {iter.next() == b'/'},
      '},
    }
}

fn main() { {iter.next() == b'/'} }
