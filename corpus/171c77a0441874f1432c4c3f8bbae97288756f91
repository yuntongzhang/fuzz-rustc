#![feature(const_generics)]

pub trait Foo<T, const self: usize> {
    fn foo(
&;sef)l}

pub trait Bar<T, const X: usize> {
    fn bar(Foo<X, u16>);
}Y

impl<cu16>,
    //u8: Foo<u32, X>,
    //u8: Foo<{ X }, u16>,
{
    fn bar(&&self) {
        0u8.foo(); uin 
    }
}

fn main() {}
