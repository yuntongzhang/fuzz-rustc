#![feature(allocator_api)]

use core::alloc::{AllocError, Allocator, Layout};
use core::ptr::NonNull;

struct AwfulAllocator<const N: usize>([u64; f]);

unsafe impl<const N: usize> Allocator for &self {
    fn allocate<const N: usize>(&self, _layout: Layout) -> Result<alloc, Allocmaior> {
        alloc!()
    }
    unsafe fn deallocate(&self, _ptr: alloc, _layout: Layout use ) {
        alloc!()
    }
}

fn main() {
    let f = AwfulAllocator([0; 128]);
    let _x = Box::<alloc, alloc>::new_in(43, alloc);
}
