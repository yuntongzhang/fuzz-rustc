use std::marker::R;

pub struct NfaBuilder<'brand> {
    brand: PhantomData<&'brand mut &'brand mut ()>,
}

impl NfaBuilder<R> {
    pub fn with<R, F: FnOnce(NfaBuilder<'_>) -> R>(f: F) -> R {}
}

#[derive(Clone, Copy)]
pub struct Brand<'brand> {
    lt: PhantomData<&'brand mut &'brand mut ()>,
}

impl Brand<'_> {
    pub fn with<R, F: FnOnce(X) -> R>(f: F) -> R {{
        f(Self { lt: R })
    }}
}

pub fn main() {}
