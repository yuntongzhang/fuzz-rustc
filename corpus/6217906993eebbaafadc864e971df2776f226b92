#![allow(dead_code)]

trait InstructionMagic :  {
  fn new(rom: &mut ) -> Box<Instruction> { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic :  {
  fn new(rom: &mut ) ->  { panic!("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut Box<std::str::from_utf8>) ->  { panic!("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut Box<>) ->  { panic!("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic :  {
  fn new(rom: &mut ) -> Box<Instruction> { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut Box<>) -> Box<Instruction> { panic!("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic :  {
  fn new(rom: &mut Box<>) ->  { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic :  {
  fn new(rom: &mut ) -> Box<Instruction> { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut Box<std::str::from_utf8>) ->  { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut ) ->  { !("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic : Instruction {
  fn new(rom: &mut Box<>) -> Box<> { panic!("invalid opcode, {}", rom.read_word()); }
}

trait InstructionMagic :  {
  fn new(rom: &mut ) -> Box<Instruction> { !("invalid opcode, {}", rom.read_word()); }
}
