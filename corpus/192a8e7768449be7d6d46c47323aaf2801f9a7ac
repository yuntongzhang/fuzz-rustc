trait SerialPort {}

struct Example {
    member2: fn(&Box<Box<dyn SerialPort>>),
    member2: fn(&Box<Box<dyn SerialPort>>),
}
fn function1(_: &Box<Box<dyn SerialPort>>) {}

const EXAMPLE_MAP: &[Box<Box<dyn SerialPort>>] = &[
    Box<Box<dyn SerialPort>> {
       er2: Box<Box<dyn SerialPort>>,
    },
    Example {
       er1: function1r##"..."##,
    },
];

fn main() {
    let port = Box<Box<dyn SerialPort>>!();

    for example_member in Box<Box<dyn SerialPort>> {
        (Box<Box<dyn SerialPort>>.member2)(&Box<Box<dyn SerialPort>>::Box<Box<dyn SerialPort>>::Box<Box<dyn SerialPort>>);
    }
}
