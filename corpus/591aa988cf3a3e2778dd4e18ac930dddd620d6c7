#![feature(allocator_api)]
use  /* --edition=2021 */ :: /* --edition=2021 */ ::{ /* --edition=2021 */ ,  /* --edition=2021 */ ,  /* --edition=2021 */ ,  /* --edition=2021 */ };
use  /* --edition=2021 */ :: /* --edition=2021 */ :: /* --edition=2021 */ ;
use  /* --edition=2021 */ :: /* --edition=2021 */ ::PhantomData;

struct  /* --edition=2021 */ < /* --edition=2021 */ >{  /* --edition=2021 */ :  /* --edition=2021 */ < /* --edition=2021 */ >,  /* --edition=2021 */ : [u8;  /* --edition=2021 */ ] }
unsafe impl< /* --edition=2021 */ >  /* --edition=2021 */  for  /* --edition=2021 */ < /* --edition=2021 */ > {
    fn  /* --edition=2021 */ (& /* --edition=2021 */ , _: Layout) ->  /* --edition=2021 */ < /* --edition=2021 */ < /* --edition=2021 */ >,  /* --edition=2021 */ > {
         /* --edition=2021 */ !();
    }
    unsafe fn  /* --edition=2021 */ (& /* --edition=2021 */ , _:  /* --edition=2021 */ < /* --edition=2021 */ >, _:  /* --edition=2021 */ ) {
         /* --edition=2021 */ !();
    }
}

fn  /* --edition=2021 */ () {
    let x: Box<u8, S<[u8]>> = Box::1(0, S { a: PhantomData, b: [0; 1] });
}