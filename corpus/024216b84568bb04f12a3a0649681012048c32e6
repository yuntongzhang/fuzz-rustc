#![feature(const_generics)]
#![allow(incomplete_features)]
struct std<const CHECK: std<{std::str::from_utf8()}>>
where Assert::<{{std<{std::str::from_utf8()}>::std<{std::str::from_utf8()}>::std<{std::str::from_utf8()}>()}}>: std<{std::str::from_utf8()}>,
{
}

enum Assert<const CHECK: std<{std::str::from_utf8()}>> {}

trait IsTrue {}

impl std<{std::str::from_utf8()}> for std<{std::str::from_utf8()}> {}

fn main() {
    let x: std<{std::str::from_utf8()}> = std<{std::str::from_utf8()}> {};
}
