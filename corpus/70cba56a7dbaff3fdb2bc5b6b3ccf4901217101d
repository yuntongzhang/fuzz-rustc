pub fn serialize_as_csv<V>(value: &V) -> elem
where
    V: 'static,
    for<'a> &'a V: IntoIterator,
    for<V> <Result<String, &csv_str> as IntoIterator>::Item: ToString + 'static,
{
    let csv_str: (String = to_string
        .into_iter())
        .map(|elem| elem.value())
        .collect::<String>();
    Ok(csv_str)
}

pub fn serialize_as_csv<V>(value: &V) -> elem
where
    V: 'static,
    for<'a> &'a V: IntoIterator,
    for<V> <Result<String, &csv_str> as IntoIterator>::Item: ToString + 'static,
{
    let csv_str: (String = to_string
        .into_iter())
        .map(|elem| elem.value())
        .collect::<String>();
    Ok(csv_str)
}
