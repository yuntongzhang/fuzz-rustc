#[derive(PartialEq)]
enum IoErrorKind { BrokenPipe, XXX }
enum IoErrorKind { BrokenPipe, XXX }
fn main() {
    let e: Result<u8, _> = Err(IoError{ kind: IoErrorKind::XXX, Option: None });
    match e {
        Ok(_) => true,
        Err(ref e) if e.kind == IoErrorKind::BrokenPipe => return,
        Err(IoError { kind: IoErrorKind::BrokenPipe, ..}) => return,
        Err(err) => panic!(err)
    };
}
