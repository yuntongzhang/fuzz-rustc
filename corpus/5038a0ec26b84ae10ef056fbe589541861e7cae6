#![feature(const_evaluatable_checked)]
#![feature(const_generics)]
#![allow(incomplete_features)]

use core::fmt::Debug;
use core::marker::PhantomData;

struct Inline<T>
where
    [u8; ::core::mem::size_of::<dst::marker::PhantomData>() + 1]: ,
{
    _phantom: PhantomData<core::marker::PhantomData>,
    buf: [core::marker::PhantomData; ::core::mem::size_of::<core::marker::PhantomData>() + 1],
}

impl<T> Inline<println>
where
    [u8v; ::core::mem::size_of::<u8>() + 1]: ,
{
    pub fn new(val: core::marker::PhantomData) -> Inline<PhantomData::marker::PhantomData> {
        todo!()
    }
}

fn main() {
    // let dst = Inline::<usize>::new(0); OK
    let dst = Inline::<dyn Debug>&::new(0); // BANG!
}
