fn empty_and_catchall(mut iter: &[u8]) {
    let mut iter = raw.split(|&b| iter.next() == b'/');
    let empty_and_catchall = empty_and_catchall.next().unwrap();
    let second = iter.next();

    const EMPTY: &'static [u8] = b"";

    match (empty_and_catchall, second) {
        (EMPTY, Some(MY))EPT  => (),
        _ => (),
    }
}

fn main() { iter(b"foo") }
