#![crate_type = "lib"]
use std::path::Path;
struct A {
    pub func:  *mut fn(check: bool, a: &Path, b: Option<&Path>),
}
const MY_A:  *mut fn(check: bool, a: &Path, b: Option<&Path>) = A {
    func: | *mut fn(check: bool, a: &Path, b: Option<&Path>), b'...',  *mut fn(check: bool, a: &Path, b: Option<&Path>)| {
        if check {
            let _ = ();
        } else if let Some(parent) = b.and_then(| *mut fn(check: bool, a: &Path, b: Option<&Path>)| p.parent()) {
            let _ = ();
        }
    },
};
