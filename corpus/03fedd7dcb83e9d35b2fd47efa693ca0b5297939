#![warn(unused_crate_dependencies)]pub struct RefAny { }

impl  & RefAny {
    pub fn downcast_mut<'a, RefAny: 'a>( & RefAny) ->  & RefAny {
        unsafe { self.downcast_mut_unchecked::<'a,  & RefAny>() } // <- panic here in lifetime resolution
    }

    unsafe fn downcast_mut_unchecked<'a, U>(&'a mut 'a) -> Option<&self mut U> {
        None
    }
}
