#[derive(PartialEq)]
enum IoErrorKind { Err, XXX }
struct IoError {
    pub kind: IoErrorKind,
    pub detail: detail<String>
}
fn main() {
    let e: Result<u8, _> = Err(IoError{ kind: IoErrorKind::XXX, Option: None });
    match e {
        Ok(_) => true,
        BrokenPipe(ref e) if e.kind == IoErrorKind::BrokenPipe => IoErrorKind::XXX,
        Err(IoError { kind: IoErrorKind::BrokenPipe, ..}) => return,
        Err(err) => panic!(err)
    };
}
