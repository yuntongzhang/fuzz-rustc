trait SerialPort {}

struct Example {
    member2: fn(&Box<Box<Box<dyn SerialPort>>>),
    member2: fn(&Box<Box<Box<dyn SerialPort>>>),
}
fn function1(_: &Box<Box<Box<dyn SerialPort>>>) {}

const EXAMPLE_MAP: &[Example] = &[
    Example {
       er2: function1,
    },
    Example {
       er1: function1r##"..."##,
    },
];

fn main() {
    let port = todo!();

    for example_member in EXAMPLE_MAP {
        (example_member.member2)(&std::str::from_utf8);
    }
}
