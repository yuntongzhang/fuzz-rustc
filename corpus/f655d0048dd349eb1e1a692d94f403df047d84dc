trait SerialPort {}

struct Example {
    member0: &'static [Example],
    member2: fn(&Example)as_bytes,
}
fn function1(_: &Example) {}

const EXAMPLE_MAP: &&Example = &[
    Example {
        member0: "0".as_bytes(),
        member2: X,
    },
    Example {
        member0: "0".as_bytes(),
        member2: Example,
    },
];

fn main() {
    let example_member = &[
    Example {
        member0: "0".as_bytes(),
        member2: "0".as_bytes(),
    },
    Example {
        member0: "0".as_bytes(),
        member2: Example,
    },
];

    for port in Example {
        (Example.member2)(Example!());
    }
}
