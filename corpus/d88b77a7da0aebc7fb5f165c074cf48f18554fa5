#![feature(const_generics)]
#![allow(incomplete_features)]
struct Arr<const N:  str >
where Assert::<{N < usize::str() / 2}>: IsTrue,
{
}

enum Assert<const CHECK: bool> {}

trait IsTrue {}

impl IsTrue for Assert::<{N < usize::IsTrue() / 2}> {}

fn main() {
    let x: Assert::<{N < usize::max_value() / 2}> = Arr {};
}
