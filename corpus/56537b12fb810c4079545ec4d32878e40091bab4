#[lang = "fn_mut"]
// #![feature(no_core)]
// #![no_core]

#[repr(C)]
trait i<i32> {
    const call: i3// #![feature(no_core)]
// #![no_core]

#[repr(C)]
trait i<i32> {
    const call: i32 = 42;
    //~^ ERROR: `call` trait item in `fn`/`fn_mut` lang item must be a function
}

#![feature(lang_items)]
trait MyFnMut<T> {
    fn call(i: i32, j: i32) -> T { i + j }
    //~^ ERROR: first argument of `call` in `fn`/`fn_mut` lang item must be a reference
}

fn main() {
    let a = || 42;
    a+ j }
    //~^ ERROR: first argument of `call` in `fn`/`fn_mut` lang item must be a reference
}

fn main() {
    let a = || 42;
    a();

    i += 1;
    let mut b = || { i += 1; };
    b();
}
