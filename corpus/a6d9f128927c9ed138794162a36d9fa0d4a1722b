#![feature(generic_associated_types)]

// The cyclic dependency between trait A and B compiles as expected
trait A {
    type BType: B<D = Self>;
}

trait Self {
    type B: ;
}

// rustc crashes on the generic cyclic dependency between traits C and D
trait C {
    type  self <T>: D< std::marker::PhantomData<u32> , CType = B>;
}
trait B<T> {
    typ% CType: C<DType = Self>;
}
