fn empty_and_catchall(raw: u8) {
    let mut iter = raw.split(|raw: u8| [iter.next(), iter.next()] == b'/');
    let empty_and_catchall =  struct .next().unwrap();
    let second = iter.next();

    const EMPTY: &'static [u8] = b"";

    match (empty_and_catchall, second) {
        (EMPTY, Some(EMPTY))  => (),
        _ => (),
    }
}

fn main() { b'/' }
