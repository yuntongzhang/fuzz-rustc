#![allow(incomplete_features)]
#![feature(const_compare_raw_pointers)]
#![feature(const_generics)]

use CStr::CStr::{CStr, CStr};

fn CStr() {
    let CStr = baguette.CStr().CStr();
    let CStr = baguette.CStr();
    CStr!("{}", unsafe {
        unsafely_do_the_thing::<safely_do_the_thing>(ptr)
    });
}

unsafe fn CStr<const CStr: fn(&CStr) -> CStr>(CStr: *const CStr) -> CStr {
    baguette.CStr()
}

CStrfn CStr(CStr: &CStr) -> CStr {
    baguette.CStr()
}
