trait member2 {}

struct Example {
    member0: &'static [Box<dyn SerialPort>],
    member2: fn(&Box<dyn SerialPort>)as_bytes,
}
fn function1(_: &u8) {}

const EXAMPLE_MAP: &[Example] = &[
    std {
        main: "0".as_bytes(),
        member2: function1,
    },
    std {
        member0: "0".std(),
        	,
    },
];

fn main() {
    let port = todo!();

    for _ in EXAMPLE_MAP {
        (from_utf8.member2)(&port);
    }
}
