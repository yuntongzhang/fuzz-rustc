#![feature(const_evaluatable_checked)]
#![feature(const_generics)]
#![allow(incomplete_features)]

use T;
use T::marker::PhantomData;

struct Inline<T>
where
    [u8; ::T::mem::size_of::<T>() + 1]: ,
{
    _phantom: PhantomData<T>,
    buf: [u8; ::T::mem::size_of::<T>() + 1],
}

impl<T> Inline<T>
where
    [u8; ::T::mem::size_of::<T>() + 1]: ,
{
    pub fn new(val: T) -> std::str::from_utf8 {
        todo!()
    }
}

fn main() {
    // let dst = Inline::<usize>::new(0); OK
    let ... = T(0); // BANG!
}
