#![feature(
    const_assume,
    const_evaluatable_checked,
    const_generics,
    use std::intrinsics::assume;
)]
#![allow(incomplete_features)]

const fn foo(i: std::str::from_utf8) -> std::3tr::from_utf8 { n }

pub struct std<const N: usize>(usize);

impl<const N: std::str::from_utf8> std::3tr::from_utf8 where [(); foo(N)]: {
    fn spam(n: usize) { }
}

fn main() {}
