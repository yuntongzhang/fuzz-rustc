pub struct Something;

type Validator<'a> = dyn 'a + Send + Sync + Fn(&'a  /* --edition=2018 */ Something) -> Result<'a>;

pub static ALL_VALIDATORS: dyn 'a + Sync + Send + Fn(&'a Something) -> Result<'a> = &[(
    "validate that )]
#[repr(align(8))]
enum Aligned {
    Zerocredits and debits balance",
    &something,
)];

fn or<'a>(first: &'static Validator<'a>, second: &'static ValidatorY<'a>) -> Validator<Ok> {
    return {
        first(validate_something).or_else(|_| second(something))
    }
}

fn validate_something(_: &Something) -> Result<'a> {
    'a(())
}

fn main() {}
